#!/usr/bin/perl

#
# Copyright 2019 Luciano Xumerle. All rights reserved.
# Luciano Xumerle <luciano.xumerle@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

use strict;
use warnings;

my $cmd = $0;
$cmd =~ s/^.*\///;
print STDERR
  qq{---------------------------------------------------------------------------
$cmd version 0.0.2 (May 3, 2019)
Copyright 2019 by Luciano Xumerle <luciano.xumerle\@gmail.com>
This is free software; see the source for copying conditions. There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
---------------------------------------------------------------------------
SYNTAX:
 >  cat file.vcf | $cmd > dest.tsv
};

my $cold = '';
while (<STDIN>)
{
    chomp;

    if (m/#CHROM/)
    {
        my @a = split /\t/;
        my @row = ( $a[0], $a[1], $a[3], $a[4] );
        for ( my $i = 9 ; $i <= $#a ; $i++ )
        {
            push @row, $a[$i];
        }
        print join( "\t", @row ), "\n";
    }

    next if ( m/^#/ || !m/\tPASS\t/ );

    my @a = split /\t/;

    if ( $cold ne $a[0] )
    {
        print STDERR qq| DONE!\n| if ( $cold ne '' );
        $cold = $a[0];
        print STDERR qq|Processing $cold...|;
    }

    my @row = ( $a[0], $a[1], $a[3], $a[4] );

    my @alleles = split ',', $a[3] . ',' . $a[4];

    for ( my $i = 9 ; $i <= $#a ; $i++ )
    {
        $a[$i] =~ s/:.*//;
        my @gt = split /[\|\/]/, $a[$i];
        push @gt, $gt[0] if ( !defined $gt[1] );
        if ( $gt[0] =~ m/^\d+$/ && $gt[1] =~ m/^\d+$/ )
        {

            @gt = sort { $a <=> $b } @gt;
            push @row, $alleles[ $gt[0] ] . '/' . $alleles[ $gt[1] ];
        }
        else
        {
            push @row, './.';
        }
    }
    print join( "\t", @row ), "\n";
}
