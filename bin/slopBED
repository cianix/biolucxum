#!/usr/bin/perl

#
# Copyright 2018 Luciano Xumerle. All rights reserved.
# Luciano Xumerle <luciano.xumerle@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

use strict;
use warnings;

my $cmd = $0;
$cmd =~ s/^.*\///;
print STDERR
  qq{---------------------------------------------------------------------------
$cmd version 0.0.2 (Feb 24, 2019)
Copyright 2018 by Luciano Xumerle <luciano.xumerle\@gmail.com>
This is free software; see the source for copying conditions. There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
---------------------------------------------------------------------------
SYNTAX:
 >  cat file.bed | $cmd <slop> > dest.bed

NOTE: slop can be a negative integer too
};

my $slop = 0;
if ( defined $ARGV[0] && $ARGV[0] =~ m/^-*\d+$/ )
{
    $slop = $ARGV[0];
}
else
{
    die qq|Give a valid slop value\n\n|;
}

while (<STDIN>)
{
    chomp;
    my @a = split /\t/;
    $a[1] = $a[1] - $slop;
    $a[2] = $a[2] + $slop;

    # for short regions a negative slop can delete the region
    next if ( $a[2] <= $a[1] );

    # start position must be 0 or greater
    $a[1] = 0 if ( $a[1] < 0 );

    print join( "\t", @a ), "\n";
}
