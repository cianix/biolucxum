#!/usr/bin/perl

#
# Copyright 2018 Luciano Xumerle. All rights reserved.
# Luciano Xumerle <luciano.xumerle@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

use strict;
use warnings;

my $cmd = $0;
$cmd =~ s/^.*\///;
print STDERR
  qq{---------------------------------------------------------------------------
$cmd version 0.0.2 (Oct 25, 2018)
Copyright 2018 by Luciano Xumerle <luciano.xumerle\@gmail.com>
This is free software; see the source for copying conditions. There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
---------------------------------------------------------------------------

SYNTAX:

 > $cmd <file.vcf[.gz]> [--ref]

NOTE: the script print only PASS position in which
      almost a GT field has a number greater than 0
      Use "--ref"" option to keep also 0/0 genotypes.\n
};

my $vcf = '';
my $ref = 0;
foreach my $f (@ARGV)
{
    if ( -f $f )
    {
        $vcf = $f;
    }
    elsif ( $f =~ m/-ref/ )
    {
        $ref++;
    }
}

&getPASS($vcf) if ( $vcf ne '' );

sub getPASS
{
    my $vcf = shift;

    if ( $vcf =~ m/vcf.gz$/i )
    {
        open( FILE, "gunzip -dc $vcf | " ) || die "No input file\n\n";
    }
    else
    {
        open( FILE, $vcf ) || die;
    }

    while (<FILE>)
    {
        chomp;
        if (m/^#/)
        {
            print "$_\n";
        }
        elsif (m/\tPASS\t/)
        {
            my @a = split /\t/;
            for ( my $i = 9 ; $i <= $#a ; $i++ )
            {
                my @gg = split ':', $a[$i];
                next if ( $gg[0] =~ m/\./ );
                if ( $gg[0] =~ m/[123456789]/ || $ref > 0 )
                {
                    print "$_\n";
                    last;
                }
            }
        }
    }
    close FILE;
}
